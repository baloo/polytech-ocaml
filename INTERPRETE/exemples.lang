(fun x -> x) (fun y -> y y)
(fun x -> x) (fun y -> y y) 1
(fun x -> x) (fun y -> y y) (fun x->1)
(fun x -> 2) (fun y -> y y) (fun x->1) (* erreur si l'application est associative Ã  gauche, 2 sinon*)


let rec fact = fun n -> if n <= 1 then 1 else n * (fact (n - 1)) fi in fact 5

let fact = (fun f -> fun n -> if n <= 1 then 1 else n * (f f (n - 1)) fi)
in fact fact 5 
